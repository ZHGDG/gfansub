1
00:00:00,000 --> 00:00:03,22

2
00:00:03,22 --> 00:00:04,479
SUNIL VEMURI: 嗨, 我是SUNIL VEMURI,
SUNIL VEMURI: Hi,
I'm Sunil Vemuri,

3
00:00:04,480 --> 00:00:06,000
我已经等不及去享受
and I can't wait
for the day when

4
00:00:06,000 --> 00:00:09,170
像电影里的人那样与自己的手表和手机交谈的那一天了.
I can talk to my watch and phone
like they do in the movies.

5
00:00:09,170 --> 00:00:10,810
虽然我们离这还有一段距离.
We're still a ways
away from that.

6
00:00:10,810 --> 00:00:13,70
但好消息是在Android M中
But the good news is we're
introducing a new API

7
00:00:13,70 --> 00:00:15,390
我们引进了一个全新的接口, 以让我们朝向这个方向
in Android M that takes
us an important step

8
00:00:15,390 --> 00:00:16,520
迈出重要的一步.
in that direction.

9
00:00:16,520 --> 00:00:18,620
它就是语音交互接口,
It's called voice
interaction API,

10
00:00:18,620 --> 00:00:22,570
它让应用与用户之间进行口语化交谈.
and it lets apps have
spoken dialogues with users.

11
00:00:22,570 --> 00:00:24,540
我喜欢在上下班的路上收听电台,
I love listening to the
radio on my commute,

12
00:00:24,540 --> 00:00:27,939
应用TuneIn给予了我丰富的选择.
and the TuneIn app
gives me great choices.

13
00:00:27,940 --> 00:00:31,289
OK Google, 在TuneIn上播放音乐.
OK Google, play music on TuneIn.

14
00:00:31,289 --> 00:00:33,80
谷歌应用助手: 哪一种流派
GOOGLE APP ASSISTANT:
Which genre would you

15
00:00:33,80 --> 00:00:34,89
你想要收听?
like to listen to?

16
00:00:34,90 --> 00:00:35,950
SUNIL VEMURI: 古典.
SUNIL VEMURI: Classical.

17
00:00:35,950 --> 00:00:38,610
谷歌应用助手: 播放古典音乐.
GOOGLE APP ASSISTANT:
Playing classical.

18
00:00:38,610 --> 00:00:40,890
SUNIL VEMURI: 处理语音输入可能会很复杂.
SUNIL VEMURI: Handling
voice input can be complex.

19
00:00:40,890 --> 00:00:43,40
此外, 我不只是给出了一个指令.
Also I didn't just
give a command.

20
00:00:43,40 --> 00:00:46,580
我们进行了交谈, 并且TuneIn向我提出了一个问题.
I had a conversation where
TuneIn asked me a question.

21
00:00:46,580 --> 00:00:49,59
这样的交谈才是新的特性所在.
That conversation
part is what's new.

22
00:00:49,60 --> 00:00:52,160
我的同事Barnaby和我将向你展示语音指令,
My colleague Barnaby and I will
show you how voice actions,

23
00:00:52,160 --> 00:00:54,319
以及语音交互接口,
together with the
voice interaction API,

24
00:00:54,320 --> 00:00:56,790
怎样使像TuneIn这样的语音交谈功能
make it possible for you to
build conversational voice

25
00:00:56,790 --> 00:00:59,30
成为可能.
experiences like TuneIn's.

26
00:00:59,30 --> 00:01:01,290
让我们先看一个简单的系统概述.
Let's first look at a
brief system overview.

27
00:01:01,290 --> 00:01:05,289
说出"OK Google"开启交互, 而它又被称作是热词.
It starts with "OK Google"
also known as the hot word.

28
00:01:05,290 --> 00:01:08,970
这样便触发了谷歌应用助手.
That triggers the assistant,
in this case, the Google App.

29
00:01:08,970 --> 00:01:11,980
应用助手开始监听用户.
It starts listening to the user.

30
00:01:11,980 --> 00:01:14,320
语音文本, 基于云端的自然语言
The speech-to-text,
cloud-based natural language,

31
00:01:14,320 --> 00:01:15,830
以及Google知识图谱共同决定了
and Knowledge
Graph work together

32
00:01:15,830 --> 00:01:18,10
应用应该完成什么样的事情.
to determine what
should be done.

33
00:01:18,10 --> 00:01:20,750
如果它是一个指令, 它会触发Android系统上的一个意图.
If it's an action, an
Android intent is triggered.

34
00:01:20,750 --> 00:01:24,10
在我们刚才举的例子中, 这样的意图将由TuneIn来处理.
In our example, the intent
is handled by TuneIn.

35
00:01:24,10 --> 00:01:27,479
现在, Barnaby将告诉你如何在你的应用中实现此功能.
Now Barnaby will tell you
how to do this in your app.

36
00:01:27,479 --> 00:01:29,20
BARNABY JAMES: 嗨, 我是Barnaby James,
BARNABY JAMES: Hi,
I'm Barnaby James,

37
00:01:29,20 --> 00:01:30,978
我是谷歌Voice Actions团队的一员.
and I work on the Voice
Actions team at Google.

38
00:01:30,978 --> 00:01:33,410
对于某些语音指令, 应用该做些什么是明确的.
For some voice actions, it's
clear what an app should do.

39
00:01:33,410 --> 00:01:35,462
但如果用户的指令不明确,
What if the user's
command isn't clear,

40
00:01:35,462 --> 00:01:36,920
并且你的应用不知道要做些什么,
and your app isn't
sure what to do,

41
00:01:36,920 --> 00:01:38,990
并想询问用户一个问题?
and wants to ask
the user a question?

42
00:01:38,990 --> 00:01:41,592
或者可能它需要确认这么做是否正确.
Or maybe it needs to
confirm something is safe.

43
00:01:41,592 --> 00:01:44,450
语音交互接口让你的应用专注于
The Voice Interaction API lets
your app focus on the questions

44
00:01:44,450 --> 00:01:46,170
向用户提问的问题, 而谷歌应用助手会处理
to ask the user
while Google handles

45
00:01:46,170 --> 00:01:48,370
语音文本, 麦克风的设置, 以及分析
the speech-to-text,
microphone setup, and parsing

46
00:01:48,370 --> 00:01:49,810
用户的答复.
the responses.

47
00:01:49,810 --> 00:01:51,810
设想你的应用想要在播放媒体前
Suppose your app wanted
to confirm with the user

48
00:01:51,810 --> 00:01:53,476
向用户确认是否继续播放
before playing something
that may not be

49
00:01:53,476 --> 00:01:55,442
可能不适合未成年人的内容.
suitable for younger listeners.

50
00:01:55,442 --> 00:01:56,899
你可以调用语音交互函数
You would call the
voice interactor

51
00:01:56,900 --> 00:01:58,525
并提交一个确认请求,
and submit a request
for a confirmation

52
00:01:58,525 --> 00:02:00,142
以及你的提示.
along with your prompt.

53
00:02:00,142 --> 00:02:01,850
谷歌应用助手可以辨认许多表示确认的方式
Google recognizes many
of the common ways

54
00:02:01,850 --> 00:02:04,89
比如人们经常说的"是的",
people give a
confirmation such as yes,

55
00:02:04,90 --> 00:02:07,123
"请这么做", "继续"或者"就是这样".
please do it, go
ahead, or make it so.

56
00:02:07,123 --> 00:02:09,289
或者如果你希望用户像TuneIn那样
Or if you wanted to ask the
user to pick from a list

57
00:02:09,288 --> 00:02:11,513
在一个列表中选择, 你可以在你提交语音交互请求时
like TuneIn did, you'd
create an array of options

58
00:02:11,514 --> 00:02:13,430
创建一个存放选项的数组.
when you submit the voice
interaction request.

59
00:02:13,430 --> 00:02:15,800
如果用户说出了不存在列表中的选项,
If your user speaks
something not on the list,

60
00:02:15,800 --> 00:02:18,520
谷歌应用助手会再次提醒你.
Google will take care
of reprompting for you.

61
00:02:18,520 --> 00:02:21,290
OK Google, 回到Sunil那儿.
OK Google, back to Sunil.

62
00:02:21,290 --> 00:02:22,549
SUNIL VEMURI: 谢谢Barnaby.
SUNIL VEMURI: Thanks, Barnaby.

63
00:02:22,550 --> 00:02:24,580
我们还忘记了一件重要的事情.
There's one important
thing we left out.

64
00:02:24,580 --> 00:02:27,210
用户是如何使用语音来打开应用的?
How does a user launch
your app by voice?

65
00:02:27,210 --> 00:02:29,370
对于用户在日常中涉及到声音的许多事情,
For many of the common
things users do with voice,

66
00:02:29,370 --> 00:02:31,680
例如搜索, 播放音乐, 设置闹钟
such as searching, playing
music, setting alarms,

67
00:02:31,680 --> 00:02:35,60
等等, 你应该使用系统语音指令.
and so on, you should
use system voice actions.

68
00:02:35,60 --> 00:02:37,480
谷歌应用助手能够识别用户发出的这些指令
Google recognizes when
a user asks for these

69
00:02:37,480 --> 00:02:39,40
并且触发其中的意图.
and fires the intent.

70
00:02:39,40 --> 00:02:40,650
这是TuneIn所使用到的功能,
This is what TuneIn
used, and these

71
00:02:40,650 --> 00:02:42,476
而这些都在我们的网站上有相关文档.
are documented on our website.

72
00:02:42,476 --> 00:02:44,100
你现在就可以使用这些功能,
You can use these
right away, and we're

73
00:02:44,100 --> 00:02:45,960
并且我们会一直增加更多的内容.
adding more all the time.

74
00:02:45,960 --> 00:02:48,370
如果系统指令不能满足你的应用需求,
If system actions
don't fit your app,

75
00:02:48,370 --> 00:02:50,700
我们最近引入了自定义指令.
we recently introduced
custom actions.

76
00:02:50,700 --> 00:02:55,810
举个例子, 你可以说, "OK Google, 用Shazam播放这首歌."
For example, I can say, "OK
Google, Shazam this song."

77
00:02:55,810 --> 00:02:59,880
你可以访问这个地址学习自定义语音指令的更多内容.
Here's the URL to learn more
about Custom Voice Sections.

78
00:02:59,880 --> 00:03:02,10
语音交互功能是提高应用下载量
Voice is a great way to
drive traffic to your app

79
00:03:02,10 --> 00:03:03,410
以及吸引用户的一个很棒的方式.
and engage users.

80
00:03:03,410 --> 00:03:07,710
那么, 访问我们的CodeLab, 尝试一下语音交互的功能吧.
Next, check out our CodeLab
and try out voice interaction.

81
00:03:07,710 --> 00:03:08,920
谢谢, 下次见.
Thanks and see you next time.

82
00:03:08,920 --> 00:03:14,283
[音乐播放]
[MUSIC PLAYING]

83
00:03:14,283 --> 00:03:28,515

